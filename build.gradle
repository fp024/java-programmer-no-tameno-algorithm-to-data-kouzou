plugins {
    id 'java'
    id 'jacoco'
}

group 'org.fp024.study.algorithm'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


java {
  toolchain {
    languageVersion = JavaLanguageVersion.of("${javaVersion}")
  }
}

[compileJava, compileTestJava]*.options*.encoding = "${projectEncoding}"

dependencies {
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}"

    testImplementation platform("org.junit:junit-bom:${junit5Version}")
    testImplementation 'org.junit.jupiter:junit-jupiter:${junit5Version}'
    testImplementation "org.springframework:spring-test:${springVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mokitoVersion}"
    testImplementation "org.mockito:mockito-inline:${mokitoVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

}


test {
    useJUnitPlatform()
    // 테스트 클래스 실행 예시
    //     gradlew test --tests *EtcTest.test
    // 터미널에서 테스트 실행시 테스트 실행의 콘솔 출력을 위해 추가.
    // https://stackoverflow.com/questions/40954017/gradle-how-to-get-output-from-test-stderr-stdout-into-console
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

jacoco {
    // JaCoCo 버전
    toolVersion = '0.8.7'
    // 테스트결과 리포트를 저장할 경로 변경
    // default는 "$buildDir/jacoco"
    // reportsDir = file("$buildDir/jacocoReportDir")
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false
        html.destination file("$buildDir/jacocoHtml")
        xml.destination file("$buildDir/jacoco.xml")
    }
}
